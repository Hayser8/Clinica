---
import { ChevronDown } from "@lucide/astro";

/**
 * @typedef {{ id: number; question: string; answer: string }} FaqItem
 */

/**
 * Props:
 * @type {{ faqData?: FaqItem[]; faqs?: FaqItem[]; title?: string; description?: string }}
 */
const { faqData, faqs, title = "", description = "" } = Astro.props;
// Soportamos ambas props: 'faqs' o 'faqData'
const items = faqs ?? faqData ?? [];
---

<section class="w-full py-16">
  <div class="w-full max-w-7xl mx-auto px-4 py-8">
    {title && (
      <div class="text-center mb-12">
        <h2 class="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">{title}</h2>
        {description && (
          <p class="text-lg text-gray-600 max-w-3xl mx-auto">{description}</p>
        )}
      </div>
    )}

    <div class="bg-white rounded-2xl shadow-lg border border-gray-100 overflow-hidden">
      {items.map((faq) => (
        <div class="faq-item border-b border-gray-100 last:border-b-0" key={faq.id}>
          <button
            type="button"
            class="w-full py-6 px-6 text-left flex justify-between items-center hover:bg-pink-50 transition-colors duration-200 focus:outline-none focus:bg-pink-50"
            aria-expanded="false"
          >
            <span class="text-lg font-medium text-gray-800 pr-4">{faq.question}</span>
            <ChevronDown class="w-5 h-5 text-pink-600 transition-transform duration-200 flex-shrink-0" />
          </button>
          <div class="faq-content overflow-hidden transition-all duration-300 ease-in-out max-h-0 opacity-0">
            <div class="px-6 pb-6">
              <p class="text-gray-600 leading-relaxed">{faq.answer}</p>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>

  <script client:load is:inline>
    document.querySelectorAll(".faq-item").forEach((item) => {
      const btn = item.querySelector("button");
      const content = item.querySelector(".faq-content");
      btn.addEventListener("click", () => {
        const expanded = btn.getAttribute("aria-expanded") === "true";
        btn.setAttribute("aria-expanded", String(!expanded));
        content.classList.toggle("max-h-0");
        content.classList.toggle("max-h-96");
        content.classList.toggle("opacity-0");
        content.classList.toggle("opacity-100");
        btn.querySelector("svg").classList.toggle("rotate-180");
      });
    });
  </script>
</section>